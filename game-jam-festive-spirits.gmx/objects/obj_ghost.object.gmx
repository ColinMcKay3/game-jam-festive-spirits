<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ghost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_speed = 2.5;
green_scale = 0;
x_direction = 1;
y_direction = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement
if(keyboard_check(ord('A'))){
    hspeed = -player_speed;
}else if(keyboard_check(ord('D'))){
    hspeed = player_speed;
}else {
    hspeed = 0;
}

if(keyboard_check(ord('W'))){
    
    vspeed = -player_speed;
}else if(keyboard_check(ord('S'))){
    vspeed = player_speed
}else {
    vspeed = 0;
}

speed = min(speed, player_speed);

//Collision
if(keyboard_check(ord('A'))){
    x_direction = -1;
}else if(keyboard_check(ord('D'))) {
    x_direction = 1;
} else{
    x_direction =0;
}

if(keyboard_check(ord('W'))){
    y_direction = -1;
}else if(keyboard_check(ord('S'))) {
    y_direction = 1;
} else {
    y_direction = 0;
}

if(place_meeting(x+(x_direction*speed),y,obj_wall)){
    hspeed = 0;
    while(!place_meeting(x+x_direction,y,obj_wall)){
        x+=x_direction;
    }
}

if(place_meeting(x,y+(y_direction*speed),obj_wall)){
    vspeed = 0;
    while(!place_meeting(x,y+y_direction,obj_wall)){
        y+=y_direction;
    }
}

if (place_meeting(x - x_direction , y - y_direction, obj_janet) &amp;&amp; festive == 100) {
    room_goto(rm_ending);
}

//Festive
green_scale = (global.festive/100)*5;

//the amount of festive you get is kept within obj_present

//Exit The Game
if (keyboard_check_pressed(vk_escape)) {
    game_end();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dummy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.festive != 0){
    scr_game_over();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

image_speed = 0.1


if(global.has_key){
    draw_sprite(spr_key,0,view_xview[0]+200,view_yview[0]+25);
}
if(global.has_bone){
    draw_sprite(spr_bone,0,view_xview[0]+230,view_yview[0]+25);
}


if(room == rm_basement){
    draw_sprite(spr_basement_dark,0,x,y);
}
draw_sprite_ext(spr_festive,1,view_xview[0]+20,view_yview[0]+20,5,1,0,c_white,1);
draw_sprite_ext(spr_festive,0,view_xview[0]+20,view_yview[0]+20,green_scale,1,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
